set nocompatible              " be iMproved, required
filetype off                  " required
set encoding=UTF-8
set background=dark

call plug#begin('~/.vim/plugged')
Plug 'StanAngeloff/php.vim'
Plug 'preservim/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'jiangmiao/auto-pairs'
Plug '~/.fzf'
call plug#end()


"GENERAL
set backspace=indent,eol,start " make backspace a more flexible
set backup " make backup files
set backupdir=~/.vim/tmp/backup " where to put backup files
set directory=~/.vim/tmp/swap " directory to place swap files in
set undodir=~/.vim/tmp/undo " directory to place undo files in
set clipboard=unnamedplus " share clipboard
set hidden " you can change buffers without saving
set mouse=a " use mouse everywhere
set noerrorbells " don't make noise
set cursorline   " highlight current line
set cursorcolumn  " highlight current column
set wildmenu " turn on command line completion wild style
set wildignore=*.dll,*.o,*.obj,*.bak,*.exe,*.pyc,
                     \*.jpg,*.gif,*.png
set wildmode=full
set ttyfast " I have a fast terminal
set undofile " make undo possible after the file is closed and reopened
set gdefault " global substitutions are default s/a/b/g
set ttimeoutlen=50  " Make Esc work faster

" VIM UI
set incsearch " incremental search aka search as you type
set hlsearch " highlight search matches
set ignorecase " ignore case
set smartcase " but when the query starts with upper character be case sensitive
set laststatus=2 " always show the status line
set lazyredraw " do not redraw while running macros
set linespace=0 " don't insert any extra pixel lines between rows
set nolist " show traling listchars
set nostartofline " don't move the cursor to first non-blank character after some commands (:25 e.g.)
set novisualbell " don't blink
set relativenumber " turn on line numbers
set nu
set report=0 " tell us when anything is changed
set ruler " Always show current positions along the bottom
set shortmess=atToOI " shortens messages to avoid 'press a key' prompt
set showcmd " show the command being typed
set showmode " show current mode
set showmatch " show matching brackets
set scrolloff=5 " Keep 10 lines (top/bottom) for scope
set sidescrolloff=10 " Keep 5 lines at the size
set cursorline " visually mark current line
hi clear ModeMsg " Disable Color StatusLine on Insert Mode and Visual Mode

"TEXT FORMATTING
set expandtab " no real tabs please!
set wrap "wrap text
set formatoptions=cqt " see :help fo-table
set infercase " case inferred by default
set shiftround " round the indent to shiftwidth (when at 3 spaces, and I hit > go to 4, not 5)
set shiftwidth=4 " auto-indent amount when using >> <<
set softtabstop=4 " when hitting tab or backspace, how many spaces should a tab be (see expandtab)
set tabstop=4 " real tabs should be 4, and they will show with set list on
set autoindent
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$' " Highlight VCS conflict markers

"MAPPINGS
" sudo save
cmap w!! w !sudo tee % >/dev/null

"STATUS LINE 
augroup ft_statuslinecolor
  au!

  au InsertEnter * hi StatusLine ctermfg=196 guifg=#FF3145
  au InsertLeave * hi StatusLine ctermfg=130 guifg=#CD5907
augroup END

set statusline=%f    " Path.
set statusline+=%m   " Modified flag.
set statusline+=%r   " Readonly flag.
set statusline+=%w   " Preview window flag.
set statusline+=\    " Space.
set statusline+=%#redbar#                " Highlight the following as a warning.
" set statusline+=%{SyntasticStatuslineFlag()} " Syntastic errors.
set statusline+=%*                           " Reset highlighting.
set statusline+=%=   " Right align.


"NERDTree
nnoremap <silent> <F12> :NERDTreeToggle <CR> " F12 toggles file explorer
nmap <C-n> :NERDTreeToggle<CR>
" let g:NERDTreeMinimalUI=1
" let g:NERDTreeDirArrows=1
" let g:NERTreeHighlightCursorLine=1

let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'


" GUI
autocmd GUIEnter * set guioptions-=m
autocmd GUIEnter * set guioptions-=T
autocmd GUIEnter * set vb t_vb= " disable visual bell

" save with ctrl+s in normal &insert mode
noremap <silent> <C-S> :update<CR>
inoremap <silent> <C-S>     <C-O> :update<CR><ESC>

" fzf
nnoremap <silent> <C-x> :FZF<CR>
nnoremap <silent> <leader>F :FZF ~<cr>

" set/unset paste
nnoremap <leader>p :set paste<cr>
nnoremap <leader>p! :set paste!<cr>

filetype plugin indent on    " required
